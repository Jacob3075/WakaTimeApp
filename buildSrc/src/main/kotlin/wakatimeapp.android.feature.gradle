plugins {
    id "com.android.library"
    id "kotlin-android"
    id "org.jetbrains.kotlin.kapt"
    id "dagger.hilt.android.plugin"
    id "org.jetbrains.kotlin.plugin.serialization"
    id "de.mannodermaus.android-junit5"
    id "com.google.devtools.ksp"

    id "wakatimeapp.tooling"
}

android {
    compileSdk = 33

    defaultConfig {
        minSdk = 26
        targetSdk = 33

        testInstrumentationRunner = "com.jacob.wakatimeapp.HiltTestRunner"
        vectorDrawables { useSupportLibrary = true }

        manifestPlaceholders["appAuthRedirectScheme"] = "wakatimeapp"
    }

    buildTypes {
        release {
            minifyEnabled = false
            proguardFiles(
                    getDefaultProguardFile("proguard-android-optimize.txt"),
                    "proguard-rules.pro"
            )
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
        freeCompilerArgs = freeCompilerArgs + "-Xcontext-receivers"
    }

    buildFeatures { compose = true }
    composeOptions { kotlinCompilerExtensionVersion = libs.versions.composeCompiler.get() }

    // Compose Destination config (https://github.com/raamcosta/compose-destinations/issues/314)
    libraryVariants.all { variant ->
        addJavaSourceFoldersToModel(new File(buildDir, "generated/ksp/$name/kotlin"))
    }
}

dependencies {
    implementation(project(":core:models"))
    implementation(project(":core:ui"))
    implementation(project(":core:common"))

    implementation(libs.kotlinx.coroutines.android)
    implementation(libs.kotlinx.serialization.json)
    implementation(libs.kotlinx.datetime)
    implementation(libs.kotlinx.collections.immutable)

    implementation(libs.androidx.core.ktx)
    implementation(libs.androidx.appcompat)

    // Compose
    implementation(platform(libs.androidx.compose.bom))
    implementation(libs.bundles.compose.core)
    debugImplementation(libs.bundles.compose.debug)

    // Navigation
    implementation(libs.raamcosta.compose.destinations.core)
    ksp(libs.raamcosta.compose.destinations.ksp)

    // Hilt
    implementation(libs.hilt.android)
    implementation(libs.hilt.navigation.compose)
    kapt(libs.hilt.compiler)

    implementation(libs.retrofit.core)

    implementation(libs.timber)
    implementation(libs.arrow.kt.core)

    testImplementation(libs.bundles.testing.core)
    testImplementation(libs.bundles.testing.async)
    testRuntimeOnly(libs.test.junit5.engine)

    androidTestImplementation(libs.androidx.test.ext)
}

kapt {
    correctErrorTypes = true
}

ksp {
    arg("compose-destinations.mode", "destinations")
}
